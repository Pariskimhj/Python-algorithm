#!/usr/bin/env python
# coding: utf-8

# In[22]:


# 문제 출처 : 이것이 코딩 테스트다

# [큰 수의 법칙]
# 동빈이의 큰 수의 법칙은 다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰 수를 만드는 법칙이다. 
# 단, 배열의 특정한 인덱스(번호)에 해당하는 수가 연속해서 K번을 초과하여 더해질 수 없는 것이 이 법칙의 특징
# 단, 서로 다른 인덱스에 해당하는 수가 같은 경우에도 서로 다른 것으로 간주한다.

# [입력]
# 첫 줄에 N, M, K가 주어짐
# 두번째 줄에 N개의 자연수가 주어진다.

# [출력]
# 동빈이의 큰 수의 법칙에 따라 더해진 답을 출력

# ------------------------------------------------------------------------
# [풀이]
# 큰 수의 법칙은 연속으로 더할 수 있는 횟수가 최대 K번이기 때문에 '가장 큰 수를 K번 더하고 두번째로 큰 수를 1번 더하는 연산'의 반복이다.

N, M, K = map(int, input().split())        # N, M, K 입력 받기

# N개의 수를 입력 받아서 내림차순으로 정렬 후 가장 큰 수와 두번째로 큰 수만 남기기
array = sorted(map(int, input().split()), reverse=True)[:2] 

# M개의 수가 들어갈 list
a = []

# 가장 큰 수와, 두번째로 큰 수를 list에 추가
while len(a) != M:          # a의 길이가 M이 될 때까지 반복
    for k in range(1, K+1): # 1~K번
        a.append(array[0])  # 가장 큰 수를 a에 추가
    a.append(array[1])      # 두번째로 큰 수를 1번 추가
print(sum(a))               # a에 들어있는 수의 합 출력 

