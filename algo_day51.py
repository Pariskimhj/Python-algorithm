#!/usr/bin/env python
# coding: utf-8

# In[31]:


# 문제 출처 : SW Expert Academy

# 앞으로 읽어도 뒤로 읽어도 똑같은 문자열을 팰린드롬 혹은 회문이라고 부른다. 어떠한 실수 N이 양의 정수이며, 십진수로 표현했을 때 팰린드롬이면 이 수를 팰린드롬 수라고 부른다.
# 어떠한 양의 정수 N에 대해서, N과 √N이 모두 팰린드롬이면 이 수를 제곱 팰린드롬 수 라고 부른다.
# 예를 들어, 121은 제곱 팰린드롬 수인데, 121이 팰린드롬이며, 121의 제곱근인 11 역시 팰린드롬이기 때문이다.

# A 이상 B 이하 제곱 팰린드롬 수는 모두 몇 개인가?

# [입력]

# 첫 번째 줄에 테스트 케이스의 수 TC가 주어진다. 이후 TC개의 테스트 케이스가 새 줄로 구분되어 주어진다. 각 테스트 케이스의 첫 번째 줄에 A, B 가 주어진다. (1 ≤ A ≤ B ≤ 1000)

# [출력]

# 각 테스트 케이스 마다 한 줄씩, 제곱 팰린드롬 수의 개수를 출력하라.

for t in range(int(input())):                               # T 입력 받기
    n, N = map(int, input().split())                        # 시작 숫자, 끝 숫자
    count = 0                                               # count 초기화
    for i in range(n, N+1):                                 # n ~ N까지의 숫자 확인
        if (i**0.5).is_integer():                           # i의 제곱근이 정수일 때
            i_s = str(int(i**0.5))                          # i_s는 제곱근을 str로 바꾼 값
            if str(i) == str(i)[::-1] and i_s == i_s[::-1]: # 숫자가 팰린드롬이고 숫자의 제곱근이 팰린드롬이면 
                count+=1                                    # 숫자 세기
    print(f"#{t+1} {count}")                                # 결과 출력

