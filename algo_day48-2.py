#!/usr/bin/env python
# coding: utf-8

# In[ ]:


# 문제 출처 : SW Expert Academy

# N X N 크기의 단어 퍼즐을 만들려고 한다. 입력으로 단어 퍼즐의 모양이 주어진다.

# 주어진 퍼즐 모양에서 특정 길이 K를 갖는 단어가 들어갈 수 있는 자리의 수를 출력하는 프로그램을 작성하라.

# [예제]

# N = 5, K = 3 이고, 퍼즐의 모양이 아래 그림과 같이 주어졌을 때
# 0 0 1 1 1
# 1 1 1 1 0
# 0 0 1 0 0
# 0 1 1 1 1
# 1 1 1 0 1

# 길이가 3 인 단어가 들어갈 수 있는 자리는 2 곳(가로 1번, 가로 4번)이 된다.

# [제약 사항]

# 1. N은 5 이상 15 이하의 정수이다. (5 ≤ N ≤ 15)
# 2. K는 2 이상 N 이하의 정수이다. (2 ≤ K ≤ N)

# [입력]

# 입력은 첫 줄에 총 테스트 케이스의 개수 T가 온다.
# 다음 줄부터 각 테스트 케이스가 주어진다.
# 테스트 케이스의 첫 번째 줄에는 단어 퍼즐의 가로, 세로 길이 N 과, 단어의 길이 K 가 주어진다.
# 테스트 케이스의 두 번째 줄부터 퍼즐의 모양이 2차원 정보로 주어진다.
# 퍼즐의 각 셀 중, 흰색 부분은 1, 검은색 부분은 0 으로 주어진다.

# [출력]

# 테스트 케이스 t에 대한 결과는 “#t”을 찍고, 한 칸 띄고, 정답을 출력한다.
# (t는 테스트 케이스의 번호를 의미하며 1부터 시작한다.)

for t in range(int(input())):                            # T 입력 받기
    N, K = map(int, input().split())                     # N, K 입력 받기
    array = [''.join(input().split()) for _ in range(N)] # N번 문자열 입력 받아 띄어쓰기 없애고 리스트로 저장
    t_array = [''.join(a) for a in zip(*array)]          # array 전치 행렬(행, 렬 바꾸기)
    count = 0                                            # count 초기화
    for a in (array,t_array):                            # array, t_array 2가지 배열 확인
        for p in a:                                      # 각 array 내부 문자열들 확인
            count += p.split('0').count('1'*K)           # '문자열에서 0'을 기준으로 리스트를 형성하고 이 리스트 중 ['1'*K]이 있으면 count
    print(f"#{t+1} {count}")                             # 결과 출력

