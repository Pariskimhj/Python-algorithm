#!/usr/bin/env python
# coding: utf-8

# In[8]:


# 문제 출처 : SW Expert Academy

# 다음 100X100의 2차원 배열이 주어질 때, 각 행의 합, 각 열의 합, 각 대각선의 합 중 최댓값을 구하는 프로그램을 작성하여라.

# 다음과 같은 5X5 배열에서 최댓값은 29이다.

# [제약 사항]

# 총 10개의 테스트 케이스가 주어진다.
# 배열의 크기는 100X100으로 동일하다.
# 각 행의 합은 integer 범위를 넘어가지 않는다.
# 동일한 최댓값이 있을 경우, 하나의 값만 출력한다.
 
# [입력]

# 각 테스트 케이스의 첫 줄에는 테스트 케이스 번호가 주어지고 그 다음 줄부터는 2차원 배열의 각 행 값이 주어진다.

# [출력]

#부호와 함께 테스트 케이스의 번호를 출력하고, 공백 문자 후 테스트 케이스의 답을 출력한다.

for _ in range(10):                              # 테스트 케이스 10개
    t = int(input())                             # t 입력 받기
    array = [list(map(int, input().split())) for _ in range(100)] # 100*100 2차원 배열 입력 받기
    w = max([sum(a) for a in array])             # 각 행의 합 중 최대값
    l = max([sum(a) for a in list(zip(*array))]) # 각 열의 합 중 최대값(전치행렬로 변경 후 시행)
    d = []                                       # 우하향하는 대각선에 있는 값
    r_d = []                                     # 좌하향하는 대각선에 있는 값
    for x in range(100):                         # 100개의 index로 확인
        d.append(array[x][x])                    # (0,0)(1,1)(2,2)... 추가
        r_d.append(array[x][99-x])               # (0,99)(1,98)(2,97)... 추가
    print(f"#{t} {max([w,l,sum(d),sum(r_d)])}")  # 각 행의 합, 각 열의 합, 각 대각선의 합 중 최댓값

